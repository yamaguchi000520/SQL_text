RDBの基本構造
・RDBには複数の票が入っており、ここの表をtableという
・個々のtableには名前があり、そこから参照できる
・」tableは行(row)と列(column)で構成されている
・１つの行が１っ県のデータに対応し、列はそのデータの要素に対応する

データベース管理システム(DBMS)
データベース内のデータを操作するにはSQL文による命令が必要である

代表的なRDBMS
商品製品  Oracle Database オラクル社
          Db2             IBM社
          SQL Server      マイクロソフト社

OSS       MySQL           オラクル社
          MariaDB         MariaDB Corporation
          PostgreSQL      PostgreSQL Gllobal Development Group
          SQLite          D.Richard Hipp
          H2 Database     Thomas Mueller

・データベースの概要
データベースとは管理や分析を目的として様々なデータを蓄積したものを指す
ITにおけるデータベースの実体は、通常、ファイルである。
データベースはデータベース管理システム（DBMS）によって管理される
現在、様々なDBMSがソフトウェア製品として公開されている
複数のテーブルの形式でデータを管理するものをリレーショナルデータベースという
１つの行が１件のデータ、１つの列が１要素に対応している

・SQLの概要
SQLは、データベースやデータを操作するための専門用語である。
SQLで書かれた命令文をDBMSに送信することで、データの検索・追加・更新・削除などを行うことができる
SQLを送信するにはDBMS製品が提供するドライバを用いたプログラムを新しく開発するか、DBMS製品に付属するソフトウェアを利用する
SQLの文法は利用するDBMS製品によって少しずつ異なるが、基本的な部分は同じである。

・SQLの基本ルール
文の途中に改行を入れることができる
行の先頭や行の都流に半角の空白を入れることができる
「；」を命令の最後に入れることで一つの命令文が完結する
ハイフン２つ(--)から行末まではコメントとして扱われる
/*   */の間はコメントとして扱われる
SELECTやWHEREなどの命令に使う単語は、SWLとして特別な意味を持「予約語」である
予約語は、大文字と小文字のどちらで記述しても良い
テーブル名や列名に予約語を利用することはできない

・リテラルの記述に関するルール
「'」で括らずに記述されたリテラルは、数値情報として扱われる
「'」で括られたリテラルは、基本的に文字列情報として扱われる
「'」でくくられ、2022-02-25'のような一定の形式で記述されたリテラルは、日付情報として扱われる

・代表的なデータ型
---------------------------------------------------------------------------
データの種類｜区分        |代表的なデータ型
------------｜------------|------------------------------------------------
数値        ｜整数        |INTEGER型、INT型
            ｜------------|------------------------------------------------
            ｜少数        |DECIMAL型、NUMERIC型、FLOAT型、DOUBLE型、REAL型
------------｜------------|------------------------------------------------
文字列      ｜固定長      |CHAR型
            ｜------------|------------------------------------------------
            ｜可変長      |VARCHAR型
------------｜------------|------------------------------------------------
日付と時刻  ｜ー          |TIMESTAMP型、DATETIME型、DATE型、TIME型
------------｜------------|------------------------------------------------

・データ型
テーブルの各列には、データ型が指定されている
列には、データ型で指定された種類の情報しか格納することができない
利用可能なデータ型は、DBMS製品によって異なる

・４大命令
----------------------------------------------------------|----------------
命令        ｜各命令の固有の部分         |対象業の絞り込み|検索結果の加工
------------｜---------------------------|----------------|----------------
SELECT      ｜列名：FROMテーブル名       |                |その他の修飾
------------｜---------------------------|                |----------------
UPDATE      ｜テーブル名SET列名＝値      |  WHERE         | ー
------------｜---------------------------|                |----------------
DELETE      ｜FROMテーブル名|VARCHAR型   |                | ー
------------｜---------------------------|----------------|----------------
INSERT      ｜INTOテーブル名（列名）     |  ー            | ー
            ｜VALUES(値)                 |                |
------------｜---------------------------|----------------|----------------

◆SELECT文の基本構文
                  --SELECT :取得しなさい
SELECT 列名...    --この列名のデータを
FROM データ名     --このテーブルから
(その他修飾)

・ASによる別名の定義
ASを用いて別名を定義できる,メリットとしては長い名を短くできる
例)
SELECT 費目 AS ITEM, 入金額 AS RECEIVE, 出金額 AS PAY
FROM 家計簿 AS MONEYBOOK
WHERE 費目 = '給料';

※SELECT * FROM~ の乱用は注意
*(アスタリスク)による前列検索は便利ですが、データベースの設計変更などで列が増えたり減ったりすると、検索結果も変化してしまう
そのため、データベースを検索するアプリケーションプログラムでこの記述をしていた場合、予期しないバグの原因になることもある。

◆UPDATE文の基本構文
                                  --UPDATE :更新しなさい
UPDATE テーブル                   --このテーブルの情報を
SET 列名1 = 値1, 列名2 = 値2...   --列名1 :この列を
                                  --値    :このデータで

・条件付きのUPDATE分
UPDATE 家計簿
SET 入金額 = 999999
WHERE 日付 = '2022-12-24';

※WHEREのないUPDATE文は全てを更新してしまう


◆DELETE文の基本構文

DELETE            --UPDATE :更新しなさい
FROM テーブル名   --このテーブルの情報を
WHERE

※WHEREのないWHERE文は全てを削除してしまう


・INSERT文の基本構文


